generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid()) @db.Uuid
  name          String
  email         String    @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  projects      Project[]

  @@map("users")
}

model Account {
  userId            String  @db.Uuid
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
  @@map("accounts")
}

enum ProjectStatus {
  ACTIVE
  DELAYED
  COMPLETED
}

model Project {
  id          String        @id @default(uuid()) @db.Uuid
  name        String
  status      ProjectStatus
  progress    Int
  startDate   DateTime
  endDate     DateTime
  responsible String
  description String
  tasks       Task[]
  comments    Comment[]

  userId String? @db.Uuid // Relacionamento opcional com o User
  user   User?   @relation(fields: [userId], references: [id])

  @@map("projects")
}

model Task {
  id        String  @id @default(uuid()) @db.Uuid
  title     String
  completed Boolean
  projectId String  @db.Uuid // Certifique-se de que o campo projectId seja do tipo uuid
  project   Project @relation(fields: [projectId], references: [id])

  @@map("tasks")
}

model Comment {
  id        String   @id @default(uuid()) @db.Uuid
  author    String
  text      String
  date      DateTime
  projectId String   @db.Uuid // Certifique-se de que o campo projectId seja do tipo uuid
  project   Project  @relation(fields: [projectId], references: [id])

  @@map("comments")
}
